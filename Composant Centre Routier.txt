import React, { useState } from 'react';
import { 
  Truck, 
  Coffee, 
  Waves, 
  UtensilsCrossed, 
  Settings, 
  Wifi,
  Phone,
  Shield,
  BedDouble,
  Timer,
  X
} from 'lucide-react';

const CentreRoutierPOI = () => {
  const [selectedStop, setSelectedStop] = useState(null);
  const [showDetails, setShowDetails] = useState(false);

  // Componente para os ícones de amenidades
  const AmenityIcon = ({ type, available }) => {
    const icons = {
      restaurant: UtensilsCrossed,
      shower: Waves,
      coffee: Coffee,
      repair: Settings,
      wifi: Wifi,
      secure: Shield,
      rest: BedDouble,
      hours: Timer
    };
    
    const Icon = icons[type];
    return Icon ? (
      <div className={`${available ? 'text-green-600' : 'text-gray-400'}`}>
        <Icon className="w-5 h-5" />
      </div>
    ) : null;
  };

  // Card de detalhes do Centre Routier
  const StopDetails = ({ stop }) => (
    <div className="bg-white rounded-lg shadow-lg p-4">
      <div className="flex justify-between items-start">
        <div>
          <h3 className="text-xl font-bold">{stop.name}</h3>
          <p className="text-gray-600">{stop.address}</p>
        </div>
        <button 
          onClick={() => setShowDetails(false)}
          className="p-1 hover:bg-gray-100 rounded-full"
        >
          <X className="w-5 h-5" />
        </button>
      </div>

      {/* Status de vagas */}
      <div className="mt-4 flex items-center space-x-2">
        <div className={`px-3 py-1 rounded-full ${
          stop.availableSpots > 10 ? 'bg-green-100 text-green-800' :
          stop.availableSpots > 5 ? 'bg-yellow-100 text-yellow-800' :
          'bg-red-100 text-red-800'
        }`}>
          {stop.availableSpots} vagas disponíveis
        </div>
        <div className="text-sm text-gray-500">
          de {stop.totalSpots} totais
        </div>
      </div>

      {/* Grid de amenidades */}
      <div className="mt-4 grid grid-cols-4 gap-4">
        <div className="flex flex-col items-center">
          <AmenityIcon type="restaurant" available={stop.amenities.restaurant} />
          <span className="text-xs mt-1">Restaurant</span>
        </div>
        <div className="flex flex-col items-center">
          <AmenityIcon type="shower" available={stop.amenities.shower} />
          <span className="text-xs mt-1">Douche</span>
        </div>
        <div className="flex flex-col items-center">
          <AmenityIcon type="repair" available={stop.amenities.repair} />
          <span className="text-xs mt-1">Réparation</span>
        </div>
        <div className="flex flex-col items-center">
          <AmenityIcon type="secure" available={stop.amenities.secureParking} />
          <span className="text-xs mt-1">Sécurisé</span>
        </div>
      </div>

      {/* Horários e contato */}
      <div className="mt-4 bg-gray-50 rounded-lg p-3">
        <div className="flex items-center mb-2">
          <Timer className="w-4 h-4 mr-2" />
          <span>{stop.hours}</span>
        </div>
        {stop.phone && (
          <div className="flex items-center">
            <Phone className="w-4 h-4 mr-2" />
            <span>{stop.phone}</span>
          </div>
        )}
      </div>

      {/* Serviços e preços */}
      <div className="mt-4">
        <h4 className="font-medium mb-2">Services et tarifs:</h4>
        <div className="space-y-2">
          {stop.services.map((service, index) => (
            <div key={index} className="flex justify-between text-sm">
              <span>{service.name}</span>
              <span className="font-medium">{service.price}€</span>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  // Marcador no mapa
  const MapMarker = ({ stop, onClick }) => (
    <div 
      className="relative cursor-pointer"
      onClick={() => onClick(stop)}
    >
      <div className="absolute flex items-center justify-center w-8 h-8 bg-blue-500 rounded-full hover:bg-blue-600">
        <Truck className="w-5 h-5 text-white" />
      </div>
      {stop.availableSpots < 5 && (
        <div className="absolute -top-2 -right-2 w-4 h-4 bg-red-500 rounded-full text-white text-xs flex items-center justify-center">
          {stop.availableSpots}
        </div>
      )}
    </div>
  );

  return (
    <div className="relative">
      {/* Filtros */}
      <div className="absolute top-4 left-4 bg-white rounded-lg shadow-lg p-4 z-10">
        <h3 className="font-bold mb-3">Filtres Centre Routier</h3>
        <div className="space-y-2">
          <label className="flex items-center space-x-2">
            <input type="checkbox" className="form-checkbox" />
            <span>Places disponibles</span>
          </label>
          <label className="flex items-center space-x-2">
            <input type="checkbox" className="form-checkbox" />
            <span>Avec restaurant</span>
          </label>
          <label className="flex items-center space-x-2">
            <input type="checkbox" className="form-checkbox" />
            <span>Avec douches</span>
          </label>
          <label className="flex items-center space-x-2">
            <input type="checkbox" className="form-checkbox" />
            <span>Parking sécurisé</span>
          </label>
        </div>
      </div>

      {/* Detalhes do ponto selecionado */}
      {selectedStop && showDetails && (
        <div className="absolute bottom-4 left-4 right-4 z-10">
          <StopDetails stop={selectedStop} />
        </div>
      )}
    </div>
  );
};

export default CentreRoutierPOI;