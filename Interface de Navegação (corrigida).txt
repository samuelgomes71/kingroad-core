import React, { useState } from 'react';
import { 
  Menu, 
  Volume2, 
  ChevronUp, 
  X, 
  AlertTriangle, 
  Search, 
  MapPin,
  Truck,
  Map,
  CircleDot,
  Clock
} from 'lucide-react';

const KingRoadNavigation = ({ 
  theme = 'modern',
  onThemeChange = () => {},
  initialRoute = null,
  onRouteChange = () => {}
}) => {
  const [showSearch, setShowSearch] = useState(false);
  const [showSidebar, setShowSidebar] = useState(true);
  
  // Dados de exemplo para demonstração
  const demoData = {
    pois: [
      {
        id: '1',
        name: 'Truck Stop A',
        distance: '2.5 km',
        type: 'fuel',
        amenities: ['Fuel', 'Restaurant', 'Showers']
      },
      {
        id: '2',
        name: 'Rest Area',
        distance: '5 km',
        type: 'rest',
        amenities: ['Parking', 'Restrooms']
      }
    ],
    currentRoute: {
      nextExit: '500m',
      nextAction: 'Turn right',
      eta: '2h 30min'
    }
  };

  // Função para obter ícone baseado no tipo
  const getPoiIcon = (type) => {
    switch (type) {
      case 'fuel':
        return <Truck size={20} className="text-blue-400" />;
      case 'rest':
        return <CircleDot size={20} className="text-green-400" />;
      default:
        return <Map size={20} className="text-gray-400" />;
    }
  };

  // Barra de pesquisa
  const SearchBar = () => (
    <div className="absolute top-0 left-0 right-0 p-4 bg-[#1E1E1E]">
      <div className="flex items-center">
        <div className="flex-1 bg-[#252525] rounded-lg flex items-center">
          <Search size={20} className="text-gray-400 ml-3" />
          <input
            type="text"
            placeholder="Search destination..."
            className="flex-1 bg-transparent text-white px-4 py-2 outline-none"
          />
        </div>
        <button 
          onClick={() => setShowSearch(false)}
          className="ml-2 p-2 bg-[#252525] rounded-lg"
        >
          <X size={20} className="text-gray-400" />
        </button>
      </div>
    </div>
  );

  // Barra lateral
  const Sidebar = () => (
    <div className="absolute top-0 bottom-0 right-0 w-64 bg-[#1E1E1E] bg-opacity-90">
      <div className="p-4">
        <h2 className="text-white font-bold mb-4">Nearby POIs</h2>
        <div className="space-y-2">
          {demoData.pois.map((poi) => (
            <div 
              key={poi.id}
              className="bg-[#252525] p-3 rounded-lg"
            >
              <div className="flex justify-between items-start">
                <div className="flex items-center">
                  {getPoiIcon(poi.type)}
                  <div className="ml-2">
                    <div className="text-white font-medium">{poi.name}</div>
                    <div className="flex items-center text-sm text-gray-400 mt-1">
                      <Clock size={14} className="mr-1" />
                      {poi.distance}
                    </div>
                  </div>
                </div>
              </div>
              <div className="mt-2 text-sm text-gray-400">
                {poi.amenities.join(' • ')}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  // Barra inferior
  const BottomBar = () => (
    <div className="absolute bottom-4 left-4 flex space-x-4">
      <button className="p-3 bg-[#1E1E1E] rounded-full">
        <Menu size={24} className="text-gray-400" />
      </button>
      <button className="p-3 bg-[#1E1E1E] rounded-full">
        <ChevronUp size={24} className="text-gray-400" />
      </button>
      <button className="p-3 bg-[#1E1E1E] rounded-full">
        <Volume2 size={24} className="text-gray-400" />
      </button>
    </div>
  );

  // Alertas de navegação
  const NavigationAlert = () => (
    <div className="absolute top-4 left-1/2 transform -translate-x-1/2 bg-[#1E1E1E] p-4 rounded-lg">
      <div className="flex items-center">
        <MapPin size={24} className="text-blue-400 mr-2" />
        <div>
          <div className="text-white font-bold">{demoData.currentRoute.nextAction}</div>
          <div className="text-gray-400">{demoData.currentRoute.nextExit}</div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="relative h-screen bg-[#121212]">
      {/* Mapa (placeholder) */}
      <div className="absolute inset-0 bg-[#121212]">
        {/* Aqui seria integrado o mapa real */}
      </div>

      {/* Interface */}
      {showSearch ? (
        <SearchBar />
      ) : (
        <button 
          className="absolute top-4 left-4 p-3 bg-[#1E1E1E] rounded-full"
          onClick={() => setShowSearch(true)}
        >
          <Search size={24} className="text-gray-400" />
        </button>
      )}

      {showSidebar && <Sidebar />}
      <BottomBar />
      <NavigationAlert />

      {/* Alertas */}
      {demoData.currentRoute && (
        <div className="absolute bottom-20 left-4 right-4 bg-red-900 bg-opacity-90 p-4 rounded-lg">
          <div className="flex items-center">
            <AlertTriangle size={24} className="text-red-300 mr-2" />
            <div className="text-white">Weight restriction ahead: 17t</div>
          </div>
        </div>
      )}
    </div>
  );
};

export default KingRoadNavigation;