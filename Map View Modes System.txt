enum class MapViewMode {
    STANDARD,    // Modo de mapa padrão
    SATELLITE,   // Modo satélite
    TERRAIN,     // Modo relevo
    HYBRID       // Combinação de satélite com marcações de ruas
}

data class MapDisplaySettings(
    val viewMode: MapViewMode = MapViewMode.STANDARD,
    val showTraffic: Boolean = true,
    val showLandmarks: Boolean = true,
    val show3DBuildings: Boolean = false,
    val showPOIs: Boolean = true,
    val nightMode: Boolean = false,
    val zoomLevel: Float = 14.0f,
    val tilt: Float = 0.0f,
    val rotation: Float = 0.0f
)

class MapViewModeManager {
    private var currentMode: MapViewMode = MapViewMode.STANDARD
    private var previousMode: MapViewMode? = null
    private val listeners = mutableListOf<(MapViewMode) -> Unit>()
    
    fun getCurrentMode(): MapViewMode = currentMode
    
    fun switchMode(newMode: MapViewMode) {
        previousMode = currentMode
        currentMode = newMode
        notifyListeners()
    }
    
    fun toggleBetweenModes() {
        currentMode = when (currentMode) {
            MapViewMode.STANDARD -> MapViewMode.SATELLITE
            MapViewMode.SATELLITE -> MapViewMode.TERRAIN
            MapViewMode.TERRAIN -> MapViewMode.STANDARD
            MapViewMode.HYBRID -> MapViewMode.STANDARD
        }
        notifyListeners()
    }
    
    fun toggleSatelliteView() {
        if (currentMode == MapViewMode.SATELLITE || currentMode == MapViewMode.HYBRID) {
            currentMode = MapViewMode.STANDARD
        } else {
            currentMode = MapViewMode.SATELLITE
        }
        notifyListeners()
    }
    
    fun addListener(listener: (MapViewMode) -> Unit) {
        listeners.add(listener)
    }
    
    fun removeListener(listener: (MapViewMode) -> Unit) {
        listeners.remove(listener)
    }
    
    private fun notifyListeners() {
        listeners.forEach { it(currentMode) }
    }
    
    // Configurações detalhadas para cada modo
    fun getSettingsForMode(mode: MapViewMode): MapDisplaySettings {
        return when (mode) {
            MapViewMode.STANDARD -> MapDisplaySettings(
                viewMode = MapViewMode.STANDARD,
                showTraffic = true,
                showLandmarks = true,
                show3DBuildings = false
            )
            MapViewMode.SATELLITE -> MapDisplaySettings(
                viewMode = MapViewMode.SATELLITE,
                showTraffic = false,
                showLandmarks = false,
                show3DBuildings = true,
                zoomLevel = 18.0f
            )
            MapViewMode.TERRAIN -> MapDisplaySettings(
                viewMode = MapViewMode.TERRAIN,
                showTraffic = true,
                showLandmarks = true,
                show3DBuildings = false,
                tilt = 30.0f
            )
            MapViewMode.HYBRID -> MapDisplaySettings(
                viewMode = MapViewMode.HYBRID,
                showTraffic = true,
                showLandmarks = true,
                show3DBuildings = true
            )
        }
    }
}