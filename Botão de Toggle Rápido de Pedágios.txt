import React, { useState } from 'react';
import { DollarSign, ChevronUp, Settings } from 'lucide-react';
import { Alert, AlertDescription } from '@/components/ui/alert';

const QuickTollToggle = () => {
  const [tollsEnabled, setTollsEnabled] = useState(true);
  const [showDetails, setShowDetails] = useState(false);
  const [showAlert, setShowAlert] = useState(false);

  // Alternar todos os pedágios
  const toggleAllTolls = () => {
    setTollsEnabled(!tollsEnabled);
    setShowAlert(true);
    setTimeout(() => setShowAlert(false), 3000);
  };

  // Botão flutuante de alternância rápida
  const QuickToggleButton = () => (
    <div className="fixed left-4 bottom-24 flex flex-col items-center">
      <button
        onClick={toggleAllTolls}
        className={`w-12 h-12 rounded-full shadow-lg flex items-center justify-center mb-2 ${
          tollsEnabled 
            ? 'bg-blue-600 hover:bg-blue-700' 
            : 'bg-gray-600 hover:bg-gray-700'
        }`}
      >
        <DollarSign 
          size={24} 
          className={`text-white ${!tollsEnabled && 'opacity-50'}`} 
        />
      </button>
      
      <button
        onClick={() => setShowDetails(true)}
        className="w-8 h-8 rounded-full bg-gray-800 flex items-center justify-center shadow-lg"
      >
        <ChevronUp size={16} className="text-white" />
      </button>
    </div>
  );

  // Alerta de status
  const StatusAlert = () => (
    <div className={`fixed bottom-24 left-20 transition-opacity duration-300 ${
      showAlert ? 'opacity-100' : 'opacity-0'
    }`}>
      <Alert className={`${
        tollsEnabled ? 'bg-blue-600' : 'bg-gray-600'
      } text-white border-none shadow-lg`}>
        <AlertDescription>
          Pedágios {tollsEnabled ? 'permitidos' : 'não permitidos'}
        </AlertDescription>
      </Alert>
    </div>
  );

  // Menu flutuante com informações rápidas
  const QuickInfo = () => (
    <div className="fixed left-20 bottom-24 bg-white rounded-lg shadow-lg p-3 w-48">
      <div className="text-sm">
        <div className="flex justify-between items-center mb-2">
          <span className="font-medium">Status</span>
          <span className={tollsEnabled ? 'text-blue-600' : 'text-gray-600'}>
            {tollsEnabled ? 'Permitido' : 'Não Permitido'}
          </span>
        </div>
        <div className="text-gray-600 text-xs mb-3">
          Clique no botão para {tollsEnabled ? 'desativar' : 'ativar'} todos os pedágios
        </div>
        <button
          onClick={() => setShowDetails(true)}
          className="w-full bg-blue-600 text-white py-1 px-2 rounded text-sm flex items-center justify-center"
        >
          <Settings size={14} className="mr-1" />
          Configurações
        </button>
      </div>
    </div>
  );

  return (
    <>
      <QuickToggleButton />
      <StatusAlert />
      {showDetails && (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50">
          {/* Aqui será renderizado o EnhancedTollManager */}
        </div>
      )}
    </>
  );
};

export default QuickTollToggle;