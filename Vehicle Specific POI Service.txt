class VehicleSpecificPOIService {
    private val supportedVehicleTypes = setOf(
        "TRUCK",
        "LIVESTOCK_TRUCK",
        "CATTLE_TRUCK",
        "HEAVY_TRUCK"
    )

    fun shouldShowPOI(poiType: POIType, vehicleConfig: VehicleConfiguration): Boolean {
        // Primeiro verifica se é um veículo suportado
        if (!supportedVehicleTypes.contains(vehicleConfig.type)) {
            return false
        }

        // Depois verifica as regras específicas para cada tipo de POI
        return when (poiType) {
            POIType.ANIMAL_REST_STOP -> {
                vehicleConfig.type in setOf("LIVESTOCK_TRUCK", "CATTLE_TRUCK")
            }
            POIType.FUEL_DISTRIBUTOR -> {
                vehicleConfig.type in setOf("TRUCK", "HEAVY_TRUCK", "LIVESTOCK_TRUCK", "CATTLE_TRUCK")
            }
            POIType.TRUCKER_LAUNDRY -> {
                vehicleConfig.type in setOf("TRUCK", "HEAVY_TRUCK", "LIVESTOCK_TRUCK", "CATTLE_TRUCK")
            }
            else -> false
        }
    }
}

enum class POIType {
    ANIMAL_REST_STOP,    // Boitels
    FUEL_DISTRIBUTOR,    // Distribuidoras de combustível
    TRUCKER_LAUNDRY,     // Lavanderias para caminhoneiros
    TRUCK_STOP,          // Paradas de caminhão
    TRUCK_PARKING,       // Estacionamentos para caminhões
    TRUCK_SERVICE        // Serviços para caminhões
}

data class VehicleConfiguration(
    val type: String,           // Tipo do veículo
    val subType: String? = null,// Subtipo específico
    val cargo: String? = null,  // Tipo de carga (se aplicável)
    val restrictions: List<String> = listOf()
)
fun getNearbyDistributors(
    latitude: Double,
    longitude: Double,
    radiusKm: Double = 100.0,
    vehicleType: String,  // <- Adicionar este parâmetro
    filters: DistributorFilters = DistributorFilters()
): List<FuelDistributor> {
    // Adicionar esta verificação no início do método
    if (!TruckPOIValidator().shouldShowPOI(
        TruckSpecificPOI.FUEL_DISTRIBUTOR, 
        vehicleType, 
        TruckType.FUEL_TANKER)
    ) {
        return emptyList()
    }

    // Resto do código continua igual...
    return distributors.values.filter { distributor ->
        // ... seu código existente ...
    }
}