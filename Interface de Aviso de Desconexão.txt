import React, { useState, useEffect } from 'react';
import { AlertTriangle, Clock, ShieldOff } from 'lucide-react';

const DisconnectionWarning = ({
  timeRemaining,
  onDismiss
}) => {
  const [countdown, setCountdown] = useState(timeRemaining);
  
  useEffect(() => {
    const timer = setInterval(() => {
      setCountdown(prev => Math.max(0, prev - 1000));
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  const formatTime = (ms) => {
    const minutes = Math.floor(ms / 60000);
    const seconds = Math.floor((ms % 60000) / 1000);
    return `${minutes}:${seconds.toString().padStart(2, '0')}`;
  };

  return (
    <div className="fixed inset-x-0 top-0 p-4 bg-red-900 text-white shadow-lg">
      <div className="flex items-center justify-between">
        <div className="flex items-center">
          <AlertTriangle size={24} className="text-red-300 mr-3" />
          <div>
            <h3 className="font-bold">Aviso de Desconexão</h3>
            <p className="text-sm text-red-200">
              Dispositivo em localização diferente detectado
            </p>
          </div>
        </div>
        
        <div className="flex items-center">
          <Clock size={20} className="text-red-300 mr-2" />
          <span className="font-mono text-xl">
            {formatTime(countdown)}
          </span>
        </div>
      </div>

      <div className="mt-4 p-3 bg-red-800 rounded-lg">
        <div className="flex items-start text-sm text-red-200">
          <ShieldOff size={16} className="mt-1 mr-2 flex-shrink-0" />
          <p>
            Este dispositivo será desconectado em breve devido ao uso simultâneo em 
            localização diferente. Apenas dispositivos no mesmo veículo podem ser 
            usados simultaneamente.
          </p>
        </div>
      </div>
    </div>
  );
};

// Componente de lista de dispositivos
const DeviceList = ({
  devices,
  onRemove
}) => {
  return (
    <div className="space-y-4">
      {devices.map(device => (
        <div 
          key={device.id}
          className="bg-gray-800 rounded-lg p-4"
        >
          <div className="flex items-center justify-between">
            <div>
              <h3 className="font-medium text-gray-200">
                {device.name}
              </h3>
              <p className="text-sm text-gray-400">
                Último acesso: {new Date(device.lastActive).toLocaleString()}
              </p>
            </div>
            
            <div className="flex items-center space-x-2">
              <span className={`px-2 py-1 rounded text-xs ${
                device.isActive 
                  ? 'bg-green-900 text-green-300' 
                  : 'bg-gray-700 text-gray-300'
              }`}>
                {device.isActive ? 'Ativo' : 'Inativo'}
              </span>
              <button
                onClick={() => onRemove(device.id)}
                className="p-2 hover:bg-red-900 rounded"
              >
                Remover
              </button>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
};

// Componente de registro de dispositivo
const DeviceRegistration = ({
  onRegister,
  remainingSlots
}) => {
  const [deviceName, setDeviceName] = useState('');

  return (
    <div className="bg-gray-800 rounded-lg p-4">
      <h3 className="font-medium text-gray-200 mb-4">
        Registrar Novo Dispositivo
      </h3>

      <div className="space-y-4">
        <div>
          <label className="block text-sm text-gray-400 mb-1">
            Nome do Dispositivo
          </label>
          <input
            type="text"
            value={deviceName}
            onChange={(e) => setDeviceName(e.target.value)}
            className="w-full bg-gray-700 text-gray-200 rounded p-2"
            placeholder="Ex: Meu Celular"
          />
        </div>

        <div className="flex items-center justify-between">
          <span className="text-sm text-gray-400">
            {remainingSlots} dispositivos móveis disponíveis
          </span>
          <button
            onClick={() => onRegister(deviceName)}
            disabled={!deviceName.trim()}
            className="px-4 py-2 bg-blue-600 text-white rounded disabled:opacity-50"
          >
            Registrar
          </button>
        </div>
      </div>
    </div>
  );
};

export { DisconnectionWarning, DeviceList, DeviceRegistration };