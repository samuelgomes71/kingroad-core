import React, { useState, useEffect } from 'react';
import { Globe, Check, ChevronDown } from 'lucide-react';

const LanguageSelector = () => {
  const [language, setLanguage] = useState('pt-PT');
  const [dropdownOpen, setDropdownOpen] = useState(false);
  const [isDarkMode, setIsDarkMode] = useState(true);
  
  // Exemplos de frases para mostrar a diferenÃ§a entre os idiomas
  const examples = {
    'pt-PT': {
      vehicle: "CamiÃ£o",
      road: "Autoestrada",
      fuel: "GasÃ³leo",
      action: "Saia na saÃ­da",
      poi: "Bomba de combustÃ­vel"
    },
    'pt-BR': {
      vehicle: "CaminhÃ£o",
      road: "Rodovia",
      fuel: "Diesel",
      action: "Pegue a saÃ­da",
      poi: "Posto de combustÃ­vel"
    }
  };
  
  // Simula o carregamento do idioma salvo
  useEffect(() => {
    // Na implementaÃ§Ã£o real, isso viria do sistema de idiomas
    const savedLanguage = localStorage.getItem('kingroad-language') || 'pt-PT';
    setLanguage(savedLanguage);
  }, []);
  
  // Altera o idioma e salva a preferÃªncia
  const changeLanguage = (lang) => {
    setLanguage(lang);
    localStorage.setItem('kingroad-language', lang);
    setDropdownOpen(false);
  };
  
  // ObtÃ©m o nome completo do idioma
  const getLanguageName = (code) => {
    return code === 'pt-PT' 
      ? 'PortuguÃªs (Portugal)' 
      : 'PortuguÃªs (Brasil)';
  };
  
  // ObtÃ©m a bandeira do paÃ­s
  const getFlag = (code) => {
    return code === 'pt-PT' ? 'ðŸ‡µðŸ‡¹' : 'ðŸ‡§ðŸ‡·';
  };
  
  return (
    <div className={`p-4 ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-100 text-gray-900'} min-h-screen`}>
      {/* CabeÃ§alho */}
      <div className="flex items-center justify-between mb-6 border-b border-gray-700 pb-3">
        <div className="flex items-center">
          <Globe className="w-6 h-6 mr-2 text-blue-500" />
          <h1 className="text-xl font-bold">King Road - Idioma</h1>
        </div>
      </div>
      
      {/* Seletor de idioma */}
      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-4 mb-6 relative`}>
        <h2 className="text-lg font-medium mb-4">Selecione o seu idioma</h2>
        
        <div className="relative">
          <button 
            onClick={() => setDropdownOpen(!dropdownOpen)}
            className={`w-full flex items-center justify-between p-3 ${isDarkMode ? 'bg-gray-700 hover:bg-gray-600' : 'bg-gray-100 hover:bg-gray-200'} rounded-lg transition-colors`}
          >
            <div className="flex items-center">
              <span className="text-2xl mr-3">{getFlag(language)}</span>
              <span className="font-medium">{getLanguageName(language)}</span>
            </div>
            <ChevronDown className={`w-5 h-5 transition-transform ${dropdownOpen ? 'transform rotate-180' : ''}`} />
          </button>
          
          {dropdownOpen && (
            <div className={`absolute top-full left-0 right-0 mt-1 ${isDarkMode ? 'bg-gray-700' : 'bg-white'} rounded-lg shadow-lg overflow-hidden z-10`}>
              {['pt-PT', 'pt-BR'].map(lang => (
                <button
                  key={lang}
                  onClick={() => changeLanguage(lang)}
                  className={`w-full flex items-center p-3 ${isDarkMode ? 'hover:bg-gray-600' : 'hover:bg-gray-100'} transition-colors ${language === lang ? (isDarkMode ? 'bg-gray-600' : 'bg-gray-200') : ''}`}
                >
                  <span className="text-2xl mr-3">{getFlag(lang)}</span>
                  <span className="font-medium">{getLanguageName(lang)}</span>
                  {language === lang && <Check className="w-5 h-5 ml-auto text-green-500" />}
                </button>
              ))}
            </div>
          )}
        </div>
      </div>
      
      {/* Exemplos de diferenÃ§as linguÃ­sticas */}
      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-4 mb-6`}>
        <h2 className="text-lg font-medium mb-4">DiferenÃ§as linguÃ­sticas</h2>
        
        <div className="grid grid-cols-2 gap-4">
          <div className={`p-3 rounded-lg ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}>
            <div className="flex items-center mb-2">
              <span className="text-lg mr-2">ðŸ‡µðŸ‡¹</span>
              <span className="font-medium">PortuguÃªs Europeu</span>
            </div>
            <ul className="space-y-2">
              {Object.entries(examples['pt-PT']).map(([key, value]) => (
                <li key={key} className="flex items-center">
                  <span className="w-2 h-2 rounded-full bg-blue-500 mr-2"></span>
                  <span>{value}</span>
                </li>
              ))}
            </ul>
          </div>
          
          <div className={`p-3 rounded-lg ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}>
            <div className="flex items-center mb-2">
              <span className="text-lg mr-2">ðŸ‡§ðŸ‡·</span>
              <span className="font-medium">PortuguÃªs Brasileiro</span>
            </div>
            <ul className="space-y-2">
              {Object.entries(examples['pt-BR']).map(([key, value]) => (
                <li key={key} className="flex items-center">
                  <span className="w-2 h-2 rounded-full bg-green-500 mr-2"></span>
                  <span>{value}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
      
      {/* InformaÃ§Ã£o de contexto */}
      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-4`}>
        <h2 className="text-lg font-medium mb-2">Porque oferecemos vÃ¡rias opÃ§Ãµes</h2>
        <p className="text-sm mb-4">
          O King Road adapta-se automaticamente Ã s preferÃªncias linguÃ­sticas regionais. Em Portugal, muitos brasileiros utilizam as estradas europeias, e por isso oferecemos a opÃ§Ã£o de escolher entre o portuguÃªs europeu e o portuguÃªs brasileiro.
        </p>
        
        <div className={`p-3 rounded-lg ${isDarkMode ? 'bg-blue-900/30' : 'bg-blue-100'} text-sm`}>
          <p>
            <strong>Nota:</strong> Esta opÃ§Ã£o afeta toda a aplicaÃ§Ã£o, incluindo comandos de voz, menus e informaÃ§Ãµes de navegaÃ§Ã£o.
          </p>
        </div>
      </div>
      
      {/* BotÃ£o de aplicar */}
      <div className="mt-6">
        <button 
          className="w-full py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors"
        >
          Aplicar configuraÃ§Ãµes
        </button>
      </div>
    </div>
  );
};

export default LanguageSelector;